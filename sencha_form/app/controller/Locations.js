/*
 * File: app/controller/Locations.js
 *
 * This file was generated by Sencha Architect version 3.0.3.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('raxa.controller.Locations', {
    extend: 'Ext.app.Controller',

    config: {
        refs: {
            mapView: {
                selector: 'navigationview #map',
                xtype: 'Ext.Map'
            },
            navigationView: {
                selector: 'navigationview',
                xtype: 'Ext.navigation.View'
            },
            mapPanel: {
                selector: 'navigationview #mapPanel',
                xtype: 'Ext.Panel'
            },
            addLocationButton: {
                selector: 'navigationview #addLocationButton',
                xtype: 'Ext.Button'
            },
            listLocationsButton: {
                selector: 'navigationview #listLocationsButton',
                xtype: 'Ext.Button'
            },
            newLocationMap: 'navigationview #newLocationMap',
            newLocationForm: 'navigationview #formPanel'
        },

        control: {
            "navigationview #listPanel list": {
                disclose: 'onLocationTap',
                tap: 'onListLocationsTap',
                itemswipe: 'onLocationSwipe'
            },
            "navigationview": {
                back: 'onBack',
                activate: 'onStart'
            },
            "navigationview #locationTextField": {
                change: 'onNewLocationPositionChange'
            },
            "navigationview #saveLocationButton": {
                tap: 'onSaveLocationButtonTap'
            }
        }
    },

    onLocationTap: function(list, record, target, index, e, eOpts) {

    },

    onListLocationsTap: function(button, e, eOpts) {

    },

    onBack: function(navigationview, eOpts) {

    },

    onStart: function(newActiveItem, container, oldActiveItem, eOpts) {

    },

    onNewLocationPositionChange: function(textfield, newValue, oldValue, eOpts) {

    },

    onSaveLocationButtonTap: function() {

    },

    onLocationSwipe: function(dataview, index, target, record, e, eOpts) {

    },

    showButtons: function() {

    },

    hideButtons: function() {

    },

    geocodeString: function(str, callback) {

    }

});