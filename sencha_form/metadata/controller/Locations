{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "Locations"
    },
    "designerId": "83fcca44-1a39-4373-8855-03755f775b52",
    "cn": [
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview #addLocationButton",
                "designer|targetType": "Ext.Button",
                "fn": "onAddLocationTap",
                "implHandler": [
                    "// Show the \"add new location\" panel\r",
                    "this.getNavigationView().push({\r",
                    "    xtype: 'formpanel',\r",
                    "    title: 'New location'\r",
                    "});\r",
                    "\r",
                    "// Hide the toolbar buttons\r",
                    "this.hideButtons();"
                ],
                "name": "tap"
            },
            "designerId": "3195a8ba-5791-470e-ade8-21758408d352"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview #listPanel list",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onLocationTap",
                "implHandler": [
                    "// Build the location\r",
                    "var latitude = record.get('latitude'),\r",
                    "    longitude = record.get('longitude'),\r",
                    "    location = new google.maps.LatLng(latitude, longitude);\r",
                    "\r",
                    "// Find the map\r",
                    "var map = this.getMapView();\r",
                    "\r",
                    "// Center the map at the location\r",
                    "map.setMapOptions({\r",
                    "    center: location\r",
                    "});\r",
                    "\r",
                    "// Show toolbar buttons\r",
                    "this.showButtons();\r",
                    "\r",
                    "// Remove the location list panel\r",
                    "this.getNavigationView().pop();"
                ],
                "name": "disclose"
            },
            "designerId": "e6da04a6-3195-42c0-822a-5f10a28d8f17"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview #listPanel list",
                "designer|targetType": "Ext.Button",
                "fn": "onListLocationsTap",
                "implHandler": [
                    "// Show the list panel view\r",
                    "this.getNavigationView().push({\r",
                    "    xtype: 'listpanel',\r",
                    "    title: 'List spot'\r",
                    "});\r",
                    "\r",
                    "// Hide toolbar buttons\r",
                    "this.hideButtons();"
                ],
                "name": "tap"
            },
            "designerId": "c61b011a-4c20-43d8-ac81-b3857124f985"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview",
                "designer|targetType": "Ext.navigation.View",
                "fn": "onBack",
                "implHandler": [
                    "// Show toolbar buttons\r",
                    "this.showButtons();"
                ],
                "name": "back"
            },
            "designerId": "18a1049f-bbf0-4d09-8186-562e4e77b7b7"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview",
                "designer|targetType": "Ext.navigation.View",
                "fn": "onStart",
                "implHandler": [
                    "// Show toolbar buttons\r",
                    "this.showButtons();"
                ],
                "name": "activate"
            },
            "designerId": "7c9b9f86-c6a9-4f20-8b96-aba2e84bb2df"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview #locationTextField",
                "designer|targetType": "Ext.field.Text",
                "fn": "onNewLocationPositionChange",
                "implHandler": [
                    "// Find the map\r",
                    "var map = this.getNewLocationMap().getMap();\r",
                    "\r",
                    "// Build a marker if there isn't one\r",
                    "if (!this.newLocationMapMarker) {\r",
                    "    this.newLocationMapMarker = new google.maps.Marker();\r",
                    "}\r",
                    "\r",
                    "// Hide the map marker\r",
                    "this.newLocationMapMarker.setMap(null);\r",
                    "\r",
                    "// Geocode the string\r",
                    "var me = this;\r",
                    "this.geocodeString(newValue, function(position) {\r",
                    "\r",
                    "    // Move the map to the position\r",
                    "    map.setOptions({\r",
                    "        center: position,\r",
                    "        zoom: 15\r",
                    "    });\r",
                    "\r",
                    "    // Drop a marker there\r",
                    "    me.newLocationMapMarker.setOptions({\r",
                    "        map: map,\r",
                    "        position: position,\r",
                    "        animation: google.maps.Animation.DROP\r",
                    "    });\r",
                    "\r",
                    "});"
                ],
                "name": "change"
            },
            "designerId": "e60b92b9-e222-42b3-84b5-638b45270e26"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview #saveLocationButton",
                "designer|targetType": "ext.button",
                "fn": "onSaveLocationButtonTap",
                "implHandler": [
                    "// Get the form and its values\r",
                    "var form = this.getNewLocationForm(),\r",
                    "    values = form.getValues();\r",
                    "\r",
                    "// Get the locations store\r",
                    "var store = Ext.getStore('Locations');\r",
                    "\r",
                    "// Get the map object\r",
                    "var map = this.getMapView().getMap();\r",
                    "\r",
                    "// Geocode the string, and then...\r",
                    "var me = this;\r",
                    "this.geocodeString(values.location, function(position) {\r",
                    "\r",
                    "    // If there's a valid position...\r",
                    "    if (position) {\r",
                    "\r",
                    "        // Add this to the store\r",
                    "        store.add({\r",
                    "            name: values.name,\r",
                    "            description: values.description,\r",
                    "            latitude: position.lat(),\r",
                    "            longitude: position.lng()\r",
                    "        });\r",
                    "\r",
                    "        // Build a list of markers if we don't have one\r",
                    "        if (!me.markers) {\r",
                    "            me.markers = [];\r",
                    "        }\r",
                    "\r",
                    "        // Drop a marker\r",
                    "        var marker = new google.maps.Marker({\r",
                    "            position: position,\r",
                    "            map: map,\r",
                    "            animation: google.maps.Animation.DROP\r",
                    "        });\r",
                    "        me.markers.push(marker);\r",
                    "\r",
                    "        // Move the map there\r",
                    "        map.setOptions({\r",
                    "            center: position\r",
                    "        });\r",
                    "\r",
                    "        // Go back to the map view\r",
                    "        me.getNavigationView().pop();\r",
                    "\r",
                    "        // Show the navbar buttons\r",
                    "        me.showButtons();\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "});"
                ],
                "name": "tap"
            },
            "designerId": "b15173cc-1960-43f2-a33f-466a37d34923"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "navigationview #listPanel list",
                "designer|targetType": "Ext.dataview.List",
                "fn": "onLocationSwipe",
                "implHandler": [
                    "// Build the title and message\r",
                    "var title = 'Delete',\r",
                    "    message = 'Delete ' + record.get('name') + '?';\r",
                    "\r",
                    "// Confirm the deletion, and then...\r",
                    "var me = this;\r",
                    "Ext.Msg.confirm(title, message, function(response) {\r",
                    "\r",
                    "    // If we get a \"yes\"...\r",
                    "    if (response == 'yes') {\r",
                    "\r",
                    "        // Get the store\r",
                    "        var store = Ext.getStore('Locations');\r",
                    "\r",
                    "        // Do the deletion from the store\r",
                    "        store.remove(record);\r",
                    "\r",
                    "        // Find and remove the marker\r",
                    "        me.markers.forEach(function(marker, index) {\r",
                    "\r",
                    "            // Get the values to compare\r",
                    "            var markerLat = marker.getPosition().lat(),\r",
                    "                markerLng = marker.getPosition().lng(),\r",
                    "                removedLat = record.get('latitude'),\r",
                    "                removedLng = record.get('longitude');\r",
                    "\r",
                    "            // Should we remove them?\r",
                    "            // This will remove two markers at the same location.\r",
                    "            if ((markerLat == removedLat) && (markerLng == removedLng)) {\r",
                    "                marker.setMap(null);\r",
                    "                me.markers.splice(index, 1);\r",
                    "            }\r",
                    "\r",
                    "        });\r",
                    "\r",
                    "        // If we've removed the last one, go back to the main menu\r",
                    "        if (store.getCount() === 0) {\r",
                    "            me.getNavigationView().pop();\r",
                    "            me.showButtons();\r",
                    "        }\r",
                    "\r",
                    "    }\r",
                    "\r",
                    "});"
                ],
                "name": "itemswipe"
            },
            "designerId": "7688ed2f-dd54-4820-a471-a1c14659084d"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "showButtons",
                "implHandler": [
                    "// Do we have any locations to show?\r",
                    "var locationCount = Ext.getStore('Locations').getCount(),\r",
                    "    hasLocations = (locationCount !== 0);\r",
                    "\r",
                    "// Show the \"add location\" button\r",
                    "this.getAddLocationButton().show();\r",
                    "\r",
                    "// Show the \"list locations\" button if we should\r",
                    "if (hasLocations) {\r",
                    "    this.getListLocationsButton().show();\r",
                    "} else {\r",
                    "    this.getListLocationsButton().hide();\r",
                    "}"
                ]
            },
            "designerId": "77224081-bc8a-4445-84b5-7337fc3c04f4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hideButtons",
                "implHandler": [
                    "// Show both buttons on the toolbar\r",
                    "this.getAddLocationButton().hide();\r",
                    "this.getListLocationsButton().hide();"
                ]
            },
            "designerId": "4566bb74-fb96-43cc-8bd1-9869229f68f1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "str",
                    "callback"
                ],
                "fn": "geocodeString",
                "implHandler": [
                    "// Build a Google Maps geocoder and its options\r",
                    "var geocoder = new google.maps.Geocoder(),\r",
                    "    options = { address: str };\r",
                    "\r",
                    "// Turn the string into a location\r",
                    "geocoder.geocode(options, function(results, status) {\r",
                    "    if (status == \"OK\") {\r",
                    "        callback(results[0].geometry.location);\r",
                    "    } else {\r",
                    "        callback(null);\r",
                    "    }\r",
                    "});"
                ]
            },
            "designerId": "99c41099-051b-4238-be57-f9a31e87a225"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mapView",
                "selector": "navigationview #map",
                "xtype": "Ext.Map"
            },
            "designerId": "a2e458b8-873f-48f2-a3f5-ccc2b350d742"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "navigationView",
                "selector": "navigationview",
                "xtype": "Ext.navigation.View"
            },
            "designerId": "2ecee221-d616-48dc-b49f-9edf775bc667"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "mapPanel",
                "selector": "navigationview #mapPanel",
                "xtype": "Ext.Panel"
            },
            "designerId": "9c9f9aa4-8aa2-499f-94b9-eaee3bf4c10c"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "addLocationButton",
                "selector": "navigationview #addLocationButton",
                "xtype": "Ext.Button"
            },
            "designerId": "de48dbfe-cf0e-4da5-b212-ed175dd46827"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "listLocationsButton",
                "selector": "navigationview #listLocationsButton",
                "xtype": "Ext.Button"
            },
            "designerId": "7648938e-c1a6-4bfd-8b20-acb28f33f9ec"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "newLocationMap",
                "selector": "navigationview #newLocationMap"
            },
            "designerId": "52552bea-dac0-4527-b9f9-57567eb479a6"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "newLocationForm",
                "selector": "navigationview #formPanel"
            },
            "designerId": "ff967f78-9c61-4e5f-b7db-5cd487abd346"
        }
    ]
}